<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTO Mapper 3.0 //EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.study.springboot.dao.IMemberDao">
  <insert id="insertMember">
	insert into member (email, password, nickname, phoneNumber, member_image, sns_check, member_state, enabled) 
			values (#{param1}, #{param2}, #{param3}, #{param4}, #{param5}, #{param6}, 'ROLE_USER', 1)   
	</insert>
	
	
	<!--안드로이드 회원가입 -->
	<insert id="AndinsertMember">
		insert into member (email, password, nickname, phoneNumber, member_image, member_state, enabled) 
		values (#{param1}, #{param2}, #{param3}, #{param4}, #{param5}, 'ROLE_USER', 1)
	</insert> 
	
	
   <!-- 아이디 중복 검사 -->
   <select id="check_id" parameterType="String" resultType="int">
      select count(*) from member where email = #{param1, jdbcType=VARCHAR}
   </select>
      
   <select id="snsCheck" resultType="String">
      select email from member where SNS_CHECK = #{param1}
   </select>
   
   
   <!-- 아이디 찾기 -->
   <select id="find_id" parameterType="String" resultType="String">
      select email from member where nickname = #{param1, jdbcType=VARCHAR} and phoneNumber = #{param2}
   </select>
      
   <select id="userCheck" resultType="com.study.springboot.dto.MemberDto">
      select password from member where email = #{param1}
   </select>
   <!-- 마이페이지 -->
      
   <select id="informationDao" resultType="com.study.springboot.dto.MemberDto">
      select * from member where email = #{param1}
   </select>

   <update id="infoModifyDao">
      update member set member_intro=#{param1}, interest_area=#{param2},
                    interest_major=#{param3}, interest_group=#{param4}  where email=#{param5}
   </update>
   
   <select id="PayMemberCountDao" resultType="int">
      select count(*) from pay where pay_member = #{param1}
   </select>
   
   <select id="MemberClassInfoDao" resultType="com.study.springboot.dto.ClassJoinDto">
   		select j.join_type, j.join_class_num, c.class_mento, c.class_place, c.class_date, c.class_name
			from class_join j, class c
    		where join_mentee = #{param1}
        		and j.join_class_num = c.class_number
   </select>
   
   <update id="ModifyPw">
      update member set password=#{param1} where email=#{param2}
   </update>
   
   <select id="IdCountDao" resultType="int">
      select count(*) from member where email=#{param1}
   </select>
   
   <update id="LeaveDao">
       update member set member_state='ROLE_LEAVE' where email=#{param1}
   </update>
   
   <select id="PayInfoClassDao" resultType="com.study.springboot.dto.PayDto">
      select p.pay_price, p.pay_kind, p.pay_kind_num, p.pay_date, p.refund,
             c.class_name
          from pay p, class c
            where p.pay_kind_num = c.class_number
              and p.pay_kind = 'class'
              and p.pay_member = #{param1}
   </select>
   
   <select id="PayInfoPlaceDao" resultType="com.study.springboot.dto.PayDto">
      select p.pay_price, p.pay_kind, p.pay_kind_num, p.pay_date, p.refund,
            l.place_name
          from pay p, place l
          where p.pay_kind_num = l.place_number
              and p.pay_kind = 'place'
                 and p.pay_member = #{param1}
   </select>
   
   <update id="MemberGradeChange">
      update member set member_score = #{param1} where email = #{param2}
   </update>
   
   <update id="MemberStopDate">
      update member set member_state='ROLE_DATE_STOP', stop_day=#{param2} where email=#{param1}
   </update>
   
   <update id="MemberStop">
      update member set member_state='ROLE_STOP' where email=#{param1}
   </update>
   
   <update id="MemberBlackList">
      update member set member_state='ROLE_BLACKLIST' where email=#{param1}
   </update>
   
   <update id="MemberMember">
      update member set member_state='ROLE_MEMBER' where email=#{param1}
   </update>
   
   <select id="ClassNumInfo" resultType="com.study.springboot.dto.ClassDto">
      select * from class where class_number = #{param1}
   </select>
   
   <select id="ClassNumTotalCount" resultType="int">
   		select count(*) from class where class_number = #{param1}
   </select>
   
   <select id="ClassNumList" resultType="com.study.springboot.dto.ClassDto">
		<![CDATA[
		select * from (select rownum num, A.* from (select * from class 
			where class_number = #{param1}
			order by class_number desc) A
			where rownum <= #{param2} ) B where B.num >= #{param3}
		]]>
	</select>
	
	<select id="ClassInfo" resultType="com.study.springboot.dto.ClassDto">
		select * from class where class_number = #{param1}
	</select>
   
   <select id="ClassNameTotalCount" resultType="int">
   		select count(*) from class where class_name = #{param1}
   </select>
   
   <select id="ClassNameList" resultType="com.study.springboot.dto.ClassDto">
		<![CDATA[
		select * from (select rownum num, A.* from (select * from class 
			where class_name = #{param1}
			order by class_number desc) A
			where rownum <= #{param2} ) B where B.num >= #{param3}
		]]>
	</select>
	
	<select id="ClassMentoTotalCount" resultType="int">
   		select count(*) from class where class_mento = #{param1}
   </select>
   
   <select id="ClassMentoList" resultType="com.study.springboot.dto.ClassDto">
		<![CDATA[
		select * from (select rownum num, A.* from (select * from class 
			where class_mento = #{param1}
			order by class_number desc) A
			where rownum <= #{param2} ) B where B.num >= #{param3}
		]]>
	</select>
	
	<select id="ClassPayTotalCount" resultType="int">
		select count(*) from pay p, class c
		where p.pay_kind_num = c.class_number
              and c.class_number = #{param1}
              and p.pay_kind = 'class'
	</select>
	
	<select id="ClassPayList" resultType="com.study.springboot.dto.PayDto">
		<![CDATA[
			select * from (select rownum num, A.* from (select c.class_name, p.pay_price, p.pay_date, p.refund, p.pay_member 
				from pay p, class c 
				where p.pay_kind_num = c.class_number
              		and c.class_number = #{param1}
              		and p.pay_kind = 'class'
				order by class_number desc) A
				where rownum <= #{param2} ) B where B.num >= #{param3}
		]]>
	</select>
	
	<select id="ClassReviewTotalCount" resultType="int">
		select count(*) from review r, class c
           where r.review_kind = 'class'
               and r.review_kind_num = #{param1}
               and c.class_number = #{param1}
	</select>
	
	<select id="ClassReviewList" resultType="com.study.springboot.dto.ReviewDto">
		<![CDATA[
			select * from (select rownum num, A.* from (select r.review_num, r.review_writer, r.review_score, r.review_content, c.class_name 
				from review r, class c
				where r.review_kind = 'class'
               		and r.review_kind_num = #{param1}
               		and c.class_number = #{param1}
				order by class_number desc) A
				where rownum <= #{param2} ) B where B.num >= #{param3}
		]]>
	</select>
   
    <select id = "ClassReviewDao" resultType="com.study.springboot.dto.ReviewDto">
       select r.review_num, r.review_writer, r.review_score, r.review_content, c.class_name
           from review r, class c
           where r.review_kind = 'class'
               and r.review_kind_num = #{param1}
               and c.class_number = #{param1}
    </select>
   
   <delete id="DeleteClass">
      delete from class where class_number = #{param1}
   </delete>
   
   <select id="placeNumTotalCount" resultType="int">
   	   select count(*) from place where place_number = #{param1} 
   </select>
   
   <select id="PlaceNumList" resultType="com.study.springboot.dto.PlaceDto">
  	   <![CDATA[
			select * from (select rownum num, A.* from (select * from place 
				where place_number = #{param1}
				order by place_number desc) A
				where rownum <= #{param2} ) B where B.num >= #{param3}
		]]>
   </select>
   
   <select id="PlaceNumInfo" resultType="com.study.springboot.dto.PlaceDto">
       select * from place where place_number = #{param1}
   </select>
   
   <select id="PlaceNameInfo" resultType="com.study.springboot.dto.PlaceDto">
      select * from place where place_name = #{param1}
   </select>
   
   <select id="PlaceReviewDao" resultType="com.study.springboot.dto.ReviewDto">
      select r.review_num, r.review_num, r.review_writer, r.review_score, r.review_content, p.place_name
         from review r, place p
         where r.review_kind = 'place'
            and r.review_kind_num = #{param1}
            and p.place_number = #{param1}
   </select>
   
   <delete id="DeletePlace">
      delete from place where place_number = #{param1}
   </delete>
   
   <insert id="QnA" parameterType="HashMap">
      insert into QnA (QnA_num, QnA_writer, QnA_content)
      values (QnA_seq.nextval, #{id}, #{QnA_content, jdbcType=VARCHAR})
   </insert>
   
   <insert id="report" parameterType="HashMap">
      insert into report (report_num, report_writer, report_content)
      values (report_seq.nextval, #{id}, #{report_content, jdbcType=VARCHAR})
   </insert>
   
   <insert id="notice" parameterType="HashMap">
      insert into notice (notice_num, notice_writer, notice_title,  notice_content)
      values (notice_seq.nextval, #{id , jdbcType=VARCHAR}, #{notice_title, jdbcType=VARCHAR}), #{notice_content, jdbcType=VARCHAR})
   </insert>
   
   <select id="totalCount" resultType="int">
      select count(*) as total from notice
   </select>
   
    <select id="notice_list" resultType="com.study.springboot.dto.NoticeDto">
      <![CDATA[
      select * from (select rownum num, A.* from (select * from notice order by notice_num desc) A
      where rownum <= #{param1} ) B where B.num >= #{param2}
      ]]>
   </select>

   <select id="history_list" resultType="com.study.springboot.dto.HistoryDto">
      <![CDATA[
      select * from (select rownum num, A.* from (select * from QnA where QnA_writer = #{param3} order by QnA_num desc) A
      where rownum <= #{param1} ) B where B.num >= #{param2}
      ]]>
   </select>
   <!-- check_alram -->
   <select id="check_alram" parameterType="String" resultType="int">
      select count(*) from alram where email = #{param1, jdbcType=VARCHAR}
   </select>
</mapper>